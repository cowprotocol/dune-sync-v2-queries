data_sources:
  - name: dune
    type: dune
    key: ${DUNE_API_KEY}
  - name: analytics_db
    type: postgres
    key: ${ANALYTICS_DB_URL}

jobs:
#this table is small (195 rows) so it's ok to requery it but it could be partitioned by evt_block_number or evt_block_time for automation
  - name: d2p-cow_protocol_${BLOCKCHAIN}_vouches
    source:
      ref: dune
      query_id: 4871726
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: blockchain
          value: ${BLOCKCHAIN}
          type: ENUM
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__cow_protocol_${BLOCKCHAIN}_vouches
      if_exists: replace

#this table is small (138 rows) so it's ok to requery it but it could be partitioned by evt_block_number or evt_block_time for automation
  - name: d2p-cow_protocol_${BLOCKCHAIN}_invalidated_vouches
    source:
      ref: dune
      query_id: 4871740
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: blockchain
          value: ${BLOCKCHAIN}
          type: ENUM
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__cow_protocol_${BLOCKCHAIN}_invalidated_vouches 
      if_exists: replace 

#this table is small (202 rows) so it's ok to requery it 
  - name: d2p-cow_protocol_${BLOCKCHAIN}_solvers
    source:
      ref: dune
      query_id: 4345829
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: blockchain
          value: ${BLOCKCHAIN}
          type: ENUM
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__cow_protocol_${BLOCKCHAIN}_solvers
      if_exists: replace

#hard coded data, not big
#manually dropped and CASCADE de table before redoing a synch: how to handle this automatically?
#todo check with felix how to parameterise this query per chain
  - name: d2p-cow_protocol_ethereum_excluded_batches
    source:
      ref: dune
      query_id: 3490353
      query_engine: medium
      poll_frequency: 5
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__cow_protocol_ethereum_excluded_batches
      if_exists: replace

  # for automation, this and all tables should specify exactly which columns to synch because some changes in source data happen
  - name: d2p-raw_slippage
    source:
      ref: dune
      query_id: 4059683 
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: start_time
          value: ${ACCOUNTING_PERIOD_START_TIME} # data should look like this: ${ACCOUNTING_PERIOD_START_TIME}
          type: DATE
        - name: end_time
          value: ${ACCOUNTING_PERIOD_END_TIME}
          type: DATE
        - name: blockchain
          value: ${BLOCKCHAIN}
          type: ENUM
        - name: raw_slippage_table_name
          value: raw_slippage_breakdown
          type: ENUM
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__raw_slippage

  #automation: partition by start and end time 
  - name: d2p-cow_protocol_${BLOCKCHAIN}_batches
    source:
      ref: dune
      query_id: 4468789
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: start_time
          value: ${ACCOUNTING_PERIOD_START_TIME}
          type: DATE
        - name: end_time
          value: ${ACCOUNTING_PERIOD_END_TIME}
          type: DATE
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__cow_protocol_${BLOCKCHAIN}_batches
      if_exists: replace

  #automation: partition by start and end time
  - name: d2p-service_fee_tracker
    source:
      ref: dune
      query_id: 4617513
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: start_time
          value: ${ACCOUNTING_PERIOD_START_TIME}
          type: DATE
        - name: end_time
          value: ${ACCOUNTING_PERIOD_END_TIME}
          type: DATE
        - name: blockchain
          value: ${BLOCKCHAIN}
          type: ENUM
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__service_fee_tracker
      if_exists: replace

  #automation: partition by start and end time
  - name: d2p-block-timestamp
    source:
      ref: dune
      query_id: 4599974
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: start_time
          value: ${ACCOUNTING_PERIOD_START_TIME}
          type: DATE
        - name: end_time
          value: ${ACCOUNTING_PERIOD_END_TIME}
          type: DATE
        - name: blockchain
          value: ${BLOCKCHAIN}
          type: ENUM
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__block_timestamp

  - name: d2p-converstion-rate-accounting-period
    source:
      ref: Dune
      query_id: 4545357
      query_engine: medium
      poll_frequency: 5
      parameters:
        - name: start_time
          value: ${ACCOUNTING_PERIOD_START_TIME}
          type: DATE
        - name: end_time
          value: ${ACCOUNTING_PERIOD_END_TIME}
          type: DATE
    destination:
      ref: analytics_db
      table_name: dbt.dune_data__converstion_rate_per_accounting_period
